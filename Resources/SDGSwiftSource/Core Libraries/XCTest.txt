open class XCTest {
    public init() {}
    open var name: String { get }
    open var testCaseCount: Int { get }
    open var testRun: XCTestRun? { get }
    open var testRunClass: AnyClass? { get }
    open func perform(_ run: XCTestRun) {}
    open func run() {}
    open func setUp() {}
    open func tearDown() {}
}
open class XCTestCase : PerformanceMeterDelegate, XCTest {
    open class func setUp() {}
    open class func tearDown() {}
    public required init(name: String, testClosure: @escaping XCTestCaseClosure) {}
    open var continueAfterFailure: Bool { get set }
    open func invokeTest() {}
    open func recordFailure(withDescription description: String, inFile filePath: String, atLine lineNumber: Int, expected: Bool) {}
}
open class XCTestCaseRun : XCTestRun {
    open func recordFailure(withDescription description: String, inFile filePath: String?, atLine lineNumber: Int, expected: Bool) {}
}
open class XCTestRun {
    public required init(test: XCTest) {}
    open var executionCount: Int { get }
    open var failureCount: Int { get }
    open var hasSucceeded: Bool { get }
    open var startDate: Date? { get }
    open var stopDate: Date? { get }
    public var test: XCTest { get }
    open var testCaseCount: Int { get }
    open var testDuration: TimeInterval { get }
    open var totalDuration: TimeInterval { get }
    open var totalFailureCount: Int { get }
    open var unexpectedExceptionCount: Int { get }
    open func start() {}
    open func stop() {}
}
open class XCTestSuite : XCTest {
    public init(name: String) {}
    open var tests { get }
    open func addTest(_ test: XCTest) {}
}
open class XCTestSuiteRun : XCTestRun {
    open var testRuns { get }
    open func addTestRun(_ testRun: XCTestRun) {}
}
public protocol XCTestObservation : _ {
    func testBundleDidFinish(_ testBundle: Bundle)
    func testBundleWillStart(_ testBundle: Bundle)
    func testCase(_ testCase: XCTestCase, didFailWithDescription description: String, inFile filePath: String?, atLine lineNumber: Int)
    func testCaseDidFinish(_ testCase: XCTestCase)
    func testCaseWillStart(_ testCase: XCTestCase)
    func testSuiteDidFinish(_ testSuite: XCTestSuite)
    func testSuiteWillStart(_ testSuite: XCTestSuite)
}