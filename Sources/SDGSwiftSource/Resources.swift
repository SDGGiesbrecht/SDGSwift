/*
 Resources.swift

 This source file is part of the SDGSwift open source project.
 https://sdggiesbrecht.github.io/SDGSwift

 Copyright ©2018–2019 Jeremy David Giesbrecht and the SDGSwift project contributors.

 Soli Deo gloria.

 Licensed under the Apache Licence, Version 2.0.
 See http://www.apache.org/licenses/LICENSE-2.0 for licence information.
 */

import Foundation

internal enum Resources {}

extension Resources {
    static let dispatch = Data(base64Encoded: "cHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlRmlsZVN5c3RlbU9iamVjdCB7CiNpZiAhb3MoTGludXgpICYmICFvcyhBbmRyb2lkKSAmJiAhb3MoV2luZG93cykKICAgIHB1YmxpYyB2YXIgZGF0YTogRGlzcGF0Y2hTb3VyY2UuRmlsZVN5c3RlbUV2ZW50IHsgZ2V0IH0KI2VuZGlmCiNpZiAhb3MoTGludXgpICYmICFvcyhBbmRyb2lkKSAmJiAhb3MoV2luZG93cykKICAgIHB1YmxpYyB2YXIgaGFuZGxlOiBJbnQzMiB7IGdldCB9CiNlbmRpZgojaWYgIW9zKExpbnV4KSAmJiAhb3MoQW5kcm9pZCkgJiYgIW9zKFdpbmRvd3MpCiAgICBwdWJsaWMgdmFyIG1hc2s6IERpc3BhdGNoU291cmNlLkZpbGVTeXN0ZW1FdmVudCB7IGdldCB9CiNlbmRpZgp9CnB1YmxpYyBwcm90b2NvbCBEaXNwYXRjaFNvdXJjZU1hY2hSZWNlaXZlIHsKI2lmIEhBVkVfTUFDSAogICAgcHVibGljIHZhciBoYW5kbGU6IG1hY2hfcG9ydF90IHsgZ2V0IH0KI2VuZGlmCn0KcHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlTWFjaFNlbmQgewojaWYgSEFWRV9NQUNICiAgICBwdWJsaWMgdmFyIGRhdGE6IERpc3BhdGNoU291cmNlLk1hY2hTZW5kRXZlbnQgeyBnZXQgfQojZW5kaWYKI2lmIEhBVkVfTUFDSAogICAgcHVibGljIHZhciBoYW5kbGU6IG1hY2hfcG9ydF90IHsgZ2V0IH0KI2VuZGlmCiNpZiBIQVZFX01BQ0gKICAgIHB1YmxpYyB2YXIgbWFzazogRGlzcGF0Y2hTb3VyY2UuTWFjaFNlbmRFdmVudCB7IGdldCB9CiNlbmRpZgp9CnB1YmxpYyBwcm90b2NvbCBEaXNwYXRjaFNvdXJjZU1lbW9yeVByZXNzdXJlIHsKI2lmIEhBVkVfTUFDSAogICAgcHVibGljIHZhciBkYXRhOiBEaXNwYXRjaFNvdXJjZS5NZW1vcnlQcmVzc3VyZUV2ZW50IHsgZ2V0IH0KI2VuZGlmCiNpZiBIQVZFX01BQ0gKICAgIHB1YmxpYyB2YXIgbWFzazogRGlzcGF0Y2hTb3VyY2UuTWVtb3J5UHJlc3N1cmVFdmVudCB7IGdldCB9CiNlbmRpZgp9CnB1YmxpYyBwcm90b2NvbCBEaXNwYXRjaFNvdXJjZVByb2Nlc3MgewojaWYgIW9zKExpbnV4KSAmJiAhb3MoQW5kcm9pZCkgJiYgIW9zKFdpbmRvd3MpCiAgICBwdWJsaWMgdmFyIGRhdGE6IERpc3BhdGNoU291cmNlLlByb2Nlc3NFdmVudCB7IGdldCB9CiNlbmRpZgojaWYgIW9zKExpbnV4KSAmJiAhb3MoQW5kcm9pZCkgJiYgIW9zKFdpbmRvd3MpCiAgICBwdWJsaWMgdmFyIGhhbmRsZTogcGlkX3QgeyBnZXQgfQojZW5kaWYKI2lmICFvcyhMaW51eCkgJiYgIW9zKEFuZHJvaWQpICYmICFvcyhXaW5kb3dzKQogICAgcHVibGljIHZhciBtYXNrOiBEaXNwYXRjaFNvdXJjZS5Qcm9jZXNzRXZlbnQgeyBnZXQgfQojZW5kaWYKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VQcm90b2NvbCB7CiAgICBwdWJsaWMgdmFyIGRhdGE6IFVJbnQgeyBnZXQgfQogICAgcHVibGljIHZhciBoYW5kbGU6IFVJbnQgeyBnZXQgfQogICAgcHVibGljIHZhciBpc0NhbmNlbGxlZDogQm9vbCB7IGdldCB9CiAgICBwdWJsaWMgdmFyIG1hc2s6IFVJbnQgeyBnZXQgfQogICAgQGF2YWlsYWJsZShtYWNPUzEwLjEyLCBpT1MxMC4wLCB0dk9TMTAuMCwgd2F0Y2hPUzMuMCwgKikgcHVibGljIGZ1bmMgYWN0aXZhdGUoKSB7fQogICAgcHVibGljIGZ1bmMgY2FuY2VsKCkge30KICAgIHB1YmxpYyBmdW5jIHJlc3VtZSgpIHt9CiAgICBAYXZhaWxhYmxlKG1hY09TMTAuMTAsIGlPUzguMCwgKikgcHVibGljIGZ1bmMgc2V0Q2FuY2VsSGFuZGxlcihoYW5kbGVyOiBEaXNwYXRjaFdvcmtJdGVtKSB7fQogICAgcHVibGljIGZ1bmMgc2V0Q2FuY2VsSGFuZGxlcihxb3M6IERpc3BhdGNoUW9TID0geCwgZmxhZ3M6IERpc3BhdGNoV29ya0l0ZW1GbGFncyA9IHgsIGhhbmRsZXI6IERpc3BhdGNoU291cmNlSGFuZGxlcj8pIHt9CiAgICBAYXZhaWxhYmxlKG1hY09TMTAuMTAsIGlPUzguMCwgKikgcHVibGljIGZ1bmMgc2V0RXZlbnRIYW5kbGVyKGhhbmRsZXI6IERpc3BhdGNoV29ya0l0ZW0pIHt9CiAgICBwdWJsaWMgZnVuYyBzZXRFdmVudEhhbmRsZXIocW9zOiBEaXNwYXRjaFFvUyA9IHgsIGZsYWdzOiBEaXNwYXRjaFdvcmtJdGVtRmxhZ3MgPSB4LCBoYW5kbGVyOiBEaXNwYXRjaFNvdXJjZUhhbmRsZXI/KSB7fQogICAgQGF2YWlsYWJsZShtYWNPUzEwLjEwLCBpT1M4LjAsICopIHB1YmxpYyBmdW5jIHNldFJlZ2lzdHJhdGlvbkhhbmRsZXIoaGFuZGxlcjogRGlzcGF0Y2hXb3JrSXRlbSkge30KICAgIHB1YmxpYyBmdW5jIHNldFJlZ2lzdHJhdGlvbkhhbmRsZXIocW9zOiBEaXNwYXRjaFFvUyA9IHgsIGZsYWdzOiBEaXNwYXRjaFdvcmtJdGVtRmxhZ3MgPSB4LCBoYW5kbGVyOiBEaXNwYXRjaFNvdXJjZUhhbmRsZXI/KSB7fQogICAgcHVibGljIGZ1bmMgc3VzcGVuZCgpIHt9Cn0KcHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlUmVhZCB7Cn0KcHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlU2lnbmFsIHsKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VUaW1lciB7CiAgICBAYXZhaWxhYmxlKHN3aWZ0LCBpbnRyb2R1Y2VkOiA0KSBwdWJsaWMgZnVuYyBzY2hlZHVsZShkZWFkbGluZTogRGlzcGF0Y2hUaW1lLCByZXBlYXRpbmcgaW50ZXJ2YWw6IERpc3BhdGNoVGltZUludGVydmFsID0geCwgbGVld2F5OiBEaXNwYXRjaFRpbWVJbnRlcnZhbCA9IHgpIHt9CiAgICBAYXZhaWxhYmxlKHN3aWZ0LCBpbnRyb2R1Y2VkOiA0KSBwdWJsaWMgZnVuYyBzY2hlZHVsZShkZWFkbGluZTogRGlzcGF0Y2hUaW1lLCByZXBlYXRpbmcgaW50ZXJ2YWw6IERvdWJsZSwgbGVld2F5OiBEaXNwYXRjaFRpbWVJbnRlcnZhbCA9IHgpIHt9CiAgICBAYXZhaWxhYmxlKHN3aWZ0LCBpbnRyb2R1Y2VkOiA0KSBwdWJsaWMgZnVuYyBzY2hlZHVsZSh3YWxsRGVhZGxpbmU6IERpc3BhdGNoV2FsbFRpbWUsIHJlcGVhdGluZyBpbnRlcnZhbDogRGlzcGF0Y2hUaW1lSW50ZXJ2YWwgPSB4LCBsZWV3YXk6IERpc3BhdGNoVGltZUludGVydmFsID0geCkge30KICAgIEBhdmFpbGFibGUoc3dpZnQsIGludHJvZHVjZWQ6IDQpIHB1YmxpYyBmdW5jIHNjaGVkdWxlKHdhbGxEZWFkbGluZTogRGlzcGF0Y2hXYWxsVGltZSwgcmVwZWF0aW5nIGludGVydmFsOiBEb3VibGUsIGxlZXdheTogRGlzcGF0Y2hUaW1lSW50ZXJ2YWwgPSB4KSB7fQogICAgcHVibGljIGZ1bmMgc2NoZWR1bGVPbmVzaG90KGRlYWRsaW5lOiBEaXNwYXRjaFRpbWUsIGxlZXdheTogRGlzcGF0Y2hUaW1lSW50ZXJ2YWwpIHt9CiAgICBwdWJsaWMgZnVuYyBzY2hlZHVsZU9uZXNob3Qod2FsbERlYWRsaW5lOiBEaXNwYXRjaFdhbGxUaW1lLCBsZWV3YXk6IERpc3BhdGNoVGltZUludGVydmFsKSB7fQogICAgcHVibGljIGZ1bmMgc2NoZWR1bGVSZXBlYXRpbmcoZGVhZGxpbmU6IERpc3BhdGNoVGltZSwgaW50ZXJ2YWw6IERpc3BhdGNoVGltZUludGVydmFsLCBsZWV3YXk6IERpc3BhdGNoVGltZUludGVydmFsKSB7fQogICAgcHVibGljIGZ1bmMgc2NoZWR1bGVSZXBlYXRpbmcod2FsbERlYWRsaW5lOiBEaXNwYXRjaFdhbGxUaW1lLCBpbnRlcnZhbDogRGlzcGF0Y2hUaW1lSW50ZXJ2YWwsIGxlZXdheTogRGlzcGF0Y2hUaW1lSW50ZXJ2YWwpIHt9Cn0KcHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlVXNlckRhdGFBZGQgewogICAgcHVibGljIGZ1bmMgYWRkKGRhdGE6IFVJbnQpIHt9Cn0KcHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlVXNlckRhdGFPciB7CiAgICBwdWJsaWMgZnVuYyBvcihkYXRhOiBVSW50KSB7fQp9CnB1YmxpYyBwcm90b2NvbCBEaXNwYXRjaFNvdXJjZVVzZXJEYXRhUmVwbGFjZSB7CiAgICBwdWJsaWMgZnVuYyByZXBsYWNlKGRhdGE6IFVJbnQpIHt9Cn0KcHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlV3JpdGUgewp9")!
    static let foundation = Data(base64Encoded: "")!
    static let swift = Data(base64Encoded: "")!
    static let syntaxHighlighting = String(data: Data(base64Encoded: "LyoKIFN5bnRheCBIaWdobGlnaHRpbmcuY3NzCgogVGhpcyBzb3VyY2UgZmlsZSBpcyBwYXJ0IG9mIHRoZSBTREdTd2lmdCBvcGVuIHNvdXJjZSBwcm9qZWN0LgogaHR0cHM6Ly9zZGdnaWVzYnJlY2h0LmdpdGh1Yi5pby9TREdTd2lmdAoKIENvcHlyaWdodCDCqTIwMTjigJMyMDE5IEplcmVteSBEYXZpZCBHaWVzYnJlY2h0IGFuZCB0aGUgU0RHU3dpZnQgcHJvamVjdCBjb250cmlidXRvcnMuCgogU29saSBEZW8gZ2xvcmlhLgoKIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5jZSwgVmVyc2lvbiAyLjAuCiBTZWUgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wIGZvciBsaWNlbmNlIGluZm9ybWF0aW9uLgogKi8KCi8qIExheW91dCAqLwoKLnN3aWZ0IHsKICAgIGRpc3BsYXk6IGlubGluZTsKICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKfQouc3dpZnQuYmxvY2txdW90ZSB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIG1hcmdpbjogMS40ZW0gMDsKICAgIGJvcmRlcjogMXB4IHNvbGlkOwogICAgIGJvcmRlci1yYWRpdXM6IDAuMzUyOTRlbTsKICAgIHBhZGRpbmc6IDAuMzUyOTRlbSAwLjk0MTE4ZW07Cn0KCi8qIENvbG91ciAqLwoKLnN3aWZ0LmJsb2NrcXVvdGUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0Y5RkFGQTsKICAgIGJvcmRlci1jb2xvcjogICNFNkU2RTY7Cn0KLnN3aWZ0IHsKICAgIGNvbG9yOiAjMDAwMDAwOwp9Cgouc3dpZnQgLmtleXdvcmQgewogICAgY29sb3I6ICNBQTBEOTE7Cn0KCi5zd2lmdCAucHVuY3R1YXRpb24gewogICAgY29sb3I6ICMwMDAwMDA7Cn0KCi5zd2lmdCAuZXh0ZXJuYWwuaWRlbnRpZmllciB7CiAgICBjb2xvcjogIzVDMjY5OTsKfQouc3dpZnQgLmludGVybmFsLmlkZW50aWZpZXIgewogICAgY29sb3I6ICMzRjZFNzQ7Cn0KCi5zd2lmdCAubnVtYmVyIHsKICAgIGNvbG9yOiAjMEUwRUZGOwp9Cgouc3dpZnQgLnN0cmluZyB7CiAgICBjb2xvcjogI0M0MUExNjsKfQouc3dpZnQgLnN0cmluZ+KAkHB1bmN0dWF0aW9uIHsKICAgIGNvbG9yOiAjNjIyNzBCOwp9Cgouc3dpZnQgLmNvbXBpbGF0aW9u4oCQY29uZGl0aW9uIHsKICAgIGNvbG9yOiAjNjQzODIwOwp9Cgouc3dpZnQgLmNvbW1lbnQgewogICAgY29sb3I6ICMwMDc0MDA7Cn0KLnN3aWZ0IC5jb21tZW504oCQcHVuY3R1YXRpb24gewogICAgY29sb3I6ICMwMDNBMDA7Cn0KLnN3aWZ0IC51cmwgewogICAgY29sb3I6ICMwRTBFRkY7Cn0KCi5zd2lmdCAuY29kZSB7CiAgICBjb2xvcjogIzAwMDAwMDsKfQoKLyogRm9udCAqLwoKLnN3aWZ0IHsKICAgIGZvbnQtZmFtaWx5OiAiU0YgTW9ubyIsIE1lbmxvLCBtb25vc3BhY2UsICJTRiBQcm8gSWNvbnMiOwogICAgbGV0dGVyLXNwYWNpbmc6IC0wLjAyN2VtOwogICAgbGluZS1oZWlnaHQ6IDEuMjY2Njc7Cn0KCi5zd2lmdCAudGV4dCB7CiAgICBmb250LWZhbWlseTogIlNGIFBybyBUZXh0IiwgIlNGIFBybyBJY29ucyIsICItYXBwbGUtc3lzdGVtIiwgIkJsaW5rTWFjU3lzdGVtRm9udCIsICJIZWx2ZXRpY2EgTmV1ZSIsICJIZWx2ZXRpY2EiLCAiQXJpYWwiLCBzYW5zLXNlcmlmOwogICAgbGV0dGVyLXNwYWNpbmc6IDA7Cn0KCi5zd2lmdCAuY29tbWVudOKAkGtleXdvcmQgewogICAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5zd2lmdCAudXJsOmxpbmssIC5zd2lmdCAudXJsOnZpc2l0ZWQgewogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9Ci5zd2lmdCAudXJsOmhvdmVyIHsKICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwp9Cg==")!, encoding: String.Encoding.utf8)!
    static let xctest = Data(base64Encoded: "b3BlbiBjbGFzcyBYQ1ROU05vdGlmaWNhdGlvbkV4cGVjdGF0aW9uIHsKICAgIHB1YmxpYyBpbml0KG5hbWUgbm90aWZpY2F0aW9uTmFtZTogTm90aWZpY2F0aW9uLk5hbWUsIG9iamVjdDogQW55PyA9IHgsIG5vdGlmaWNhdGlvbkNlbnRlcjogTm90aWZpY2F0aW9uQ2VudGVyID0geCwgZmlsZTogU3RhdGljU3RyaW5nID0geCwgbGluZTogSW50ID0geCkge30KICAgIG9wZW4gdmFyIGhhbmRsZXI6IEhhbmRsZXI/IHsgZ2V0IHNldCB9CiAgICBvcGVuIHZhciBub3RpZmljYXRpb25DZW50ZXI6IE5vdGlmaWNhdGlvbkNlbnRlciB7IGdldCB9CiAgICBvcGVuIHZhciBub3RpZmljYXRpb25OYW1lOiBOb3RpZmljYXRpb24uTmFtZSB7IGdldCB9CiAgICBvcGVuIHZhciBvYnNlcnZlZE9iamVjdDogQW55PyB7IGdldCB9Cn0Kb3BlbiBjbGFzcyBYQ1ROU1ByZWRpY2F0ZUV4cGVjdGF0aW9uIHsKICAgIHB1YmxpYyBpbml0KHByZWRpY2F0ZTogTlNQcmVkaWNhdGUsIG9iamVjdDogQW55PyA9IHgsIGZpbGU6IFN0YXRpY1N0cmluZyA9IHgsIGxpbmU6IEludCA9IHgpIHt9CiAgICBvcGVuIHZhciBoYW5kbGVyOiBIYW5kbGVyPyB7IGdldCBzZXQgfQogICAgb3BlbiB2YXIgb2JqZWN0OiBBbnk/IHsgZ2V0IH0KICAgIG9wZW4gdmFyIHByZWRpY2F0ZTogTlNQcmVkaWNhdGUgeyBnZXQgfQp9Cm9wZW4gY2xhc3MgWENUV2FpdGVyIHsKICAgIG9wZW4gY2xhc3MgZnVuYyB3YWl0KGZvciBleHBlY3RhdGlvbnM6IFtYQ1Rlc3RFeHBlY3RhdGlvbl0sIHRpbWVvdXQ6IFRpbWVJbnRlcnZhbCwgZW5mb3JjZU9yZGVyOiBCb29sID0geCwgZmlsZTogU3RhdGljU3RyaW5nID0geCwgbGluZTogSW50ID0geCkgLT4gUmVzdWx0IHt9CiAgICBwdWJsaWMgaW5pdChkZWxlZ2F0ZTogWENUV2FpdGVyRGVsZWdhdGU/ID0geCkge30KICAgIG9wZW4gdmFyIGRlbGVnYXRlOiBYQ1RXYWl0ZXJEZWxlZ2F0ZT8geyBnZXQgc2V0IH0KICAgIHB1YmxpYyB2YXIgZGVzY3JpcHRpb246IFN0cmluZyB7IGdldCB9CiAgICBvcGVuIHZhciBmdWxmaWxsZWRFeHBlY3RhdGlvbnM6IFtYQ1Rlc3RFeHBlY3RhdGlvbl0geyBnZXQgfQogICAgcHVibGljIGZ1bmMgPT0obGhzOiBYQ1RXYWl0ZXIsIHJoczogWENUV2FpdGVyKSAtPiBCb29sIHt9CiAgICBAZGlzY2FyZGFibGVSZXN1bHQgb3BlbiBmdW5jIHdhaXQoZm9yIGV4cGVjdGF0aW9uczogW1hDVGVzdEV4cGVjdGF0aW9uXSwgdGltZW91dDogVGltZUludGVydmFsLCBlbmZvcmNlT3JkZXI6IEJvb2wgPSB4LCBmaWxlOiBTdGF0aWNTdHJpbmcgPSB4LCBsaW5lOiBJbnQgPSB4KSAtPiBSZXN1bHQge30KfQpvcGVuIGNsYXNzIFhDVGVzdCB7CiAgICBwdWJsaWMgaW5pdCgpIHt9CiAgICBvcGVuIHZhciBuYW1lOiBTdHJpbmcgeyBnZXQgfQogICAgb3BlbiB2YXIgdGVzdENhc2VDb3VudDogSW50IHsgZ2V0IH0KICAgIG9wZW4gdmFyIHRlc3RSdW46IFhDVGVzdFJ1bj8geyBnZXQgfQogICAgb3BlbiB2YXIgdGVzdFJ1bkNsYXNzOiBBbnlDbGFzcz8geyBnZXQgfQogICAgb3BlbiBmdW5jIHBlcmZvcm0oXyBydW46IFhDVGVzdFJ1bikge30KICAgIG9wZW4gZnVuYyBydW4oKSB7fQogICAgb3BlbiBmdW5jIHNldFVwKCkge30KICAgIG9wZW4gZnVuYyB0ZWFyRG93bigpIHt9Cn0Kb3BlbiBjbGFzcyBYQ1Rlc3RDYXNlIHsKICAgIG9wZW4gY2xhc3MgZnVuYyBzZXRVcCgpIHt9CiAgICBvcGVuIGNsYXNzIGZ1bmMgdGVhckRvd24oKSB7fQogICAgcHVibGljIHJlcXVpcmVkIGluaXQobmFtZTogU3RyaW5nLCB0ZXN0Q2xvc3VyZTogQGVzY2FwaW5nIFhDVGVzdENhc2VDbG9zdXJlKSB7fQogICAgb3BlbiB2YXIgY29udGludWVBZnRlckZhaWx1cmU6IEJvb2wgeyBnZXQgc2V0IH0KICAgIG9wZW4gZnVuYyBpbnZva2VUZXN0KCkge30KICAgIG9wZW4gZnVuYyByZWNvcmRGYWlsdXJlKHdpdGhEZXNjcmlwdGlvbiBkZXNjcmlwdGlvbjogU3RyaW5nLCBpbkZpbGUgZmlsZVBhdGg6IFN0cmluZywgYXRMaW5lIGxpbmVOdW1iZXI6IEludCwgZXhwZWN0ZWQ6IEJvb2wpIHt9Cn0Kb3BlbiBjbGFzcyBYQ1Rlc3RDYXNlUnVuIHsKICAgIG9wZW4gZnVuYyByZWNvcmRGYWlsdXJlKHdpdGhEZXNjcmlwdGlvbiBkZXNjcmlwdGlvbjogU3RyaW5nLCBpbkZpbGUgZmlsZVBhdGg6IFN0cmluZz8sIGF0TGluZSBsaW5lTnVtYmVyOiBJbnQsIGV4cGVjdGVkOiBCb29sKSB7fQp9Cm9wZW4gY2xhc3MgWENUZXN0RXhwZWN0YXRpb24gewogICAgcHVibGljIGluaXQoZGVzY3JpcHRpb246IFN0cmluZyA9IHgsIGZpbGU6IFN0YXRpY1N0cmluZyA9IHgsIGxpbmU6IEludCA9IHgpIHt9CiAgICBvcGVuIHZhciBhc3NlcnRGb3JPdmVyRnVsZmlsbDogQm9vbCB7IGdldCBzZXQgfQogICAgcHVibGljIHZhciBkZXNjcmlwdGlvbjogU3RyaW5nIHsgZ2V0IH0KICAgIG9wZW4gdmFyIGV4cGVjdGF0aW9uRGVzY3JpcHRpb246IFN0cmluZyB7IGdldCBzZXQgfQogICAgb3BlbiB2YXIgZXhwZWN0ZWRGdWxmaWxsbWVudENvdW50OiBJbnQgeyBnZXQgc2V0IH0KICAgIG9wZW4gdmFyIGlzSW52ZXJ0ZWQ6IEJvb2wgeyBnZXQgc2V0IH0KICAgIHB1YmxpYyBmdW5jID09KGxoczogWENUZXN0RXhwZWN0YXRpb24sIHJoczogWENUZXN0RXhwZWN0YXRpb24pIC0+IEJvb2wge30KICAgIG9wZW4gZnVuYyBmdWxmaWxsKF8gZmlsZTogU3RhdGljU3RyaW5nID0geCwgbGluZTogSW50ID0geCkge30KICAgIHB1YmxpYyBmdW5jIGhhc2goaW50byBoYXNoZXI6IGlub3V0IEhhc2hlcikge30KfQpvcGVuIGNsYXNzIFhDVGVzdFJ1biB7CiAgICBwdWJsaWMgcmVxdWlyZWQgaW5pdCh0ZXN0OiBYQ1Rlc3QpIHt9CiAgICBvcGVuIHZhciBleGVjdXRpb25Db3VudDogSW50IHsgZ2V0IH0KICAgIG9wZW4gdmFyIGZhaWx1cmVDb3VudDogSW50IHsgZ2V0IH0KICAgIG9wZW4gdmFyIGhhc1N1Y2NlZWRlZDogQm9vbCB7IGdldCB9CiAgICBvcGVuIHZhciBzdGFydERhdGU6IERhdGU/IHsgZ2V0IH0KICAgIG9wZW4gdmFyIHN0b3BEYXRlOiBEYXRlPyB7IGdldCB9CiAgICBwdWJsaWMgdmFyIHRlc3Q6IFhDVGVzdCB7IGdldCB9CiAgICBvcGVuIHZhciB0ZXN0Q2FzZUNvdW50OiBJbnQgeyBnZXQgfQogICAgb3BlbiB2YXIgdGVzdER1cmF0aW9uOiBUaW1lSW50ZXJ2YWwgeyBnZXQgfQogICAgb3BlbiB2YXIgdG90YWxEdXJhdGlvbjogVGltZUludGVydmFsIHsgZ2V0IH0KICAgIG9wZW4gdmFyIHRvdGFsRmFpbHVyZUNvdW50OiBJbnQgeyBnZXQgfQogICAgb3BlbiB2YXIgdW5leHBlY3RlZEV4Y2VwdGlvbkNvdW50OiBJbnQgeyBnZXQgfQogICAgb3BlbiBmdW5jIHN0YXJ0KCkge30KICAgIG9wZW4gZnVuYyBzdG9wKCkge30KfQpvcGVuIGNsYXNzIFhDVGVzdFN1aXRlIHsKICAgIHB1YmxpYyBpbml0KG5hbWU6IFN0cmluZykge30KICAgIG9wZW4gdmFyIHRlc3RzIHsgZ2V0IH0KICAgIG9wZW4gZnVuYyBhZGRUZXN0KF8gdGVzdDogWENUZXN0KSB7fQp9Cm9wZW4gY2xhc3MgWENUZXN0U3VpdGVSdW4gewogICAgb3BlbiB2YXIgdGVzdFJ1bnMgeyBnZXQgfQogICAgb3BlbiBmdW5jIGFkZFRlc3RSdW4oXyB0ZXN0UnVuOiBYQ1Rlc3RSdW4pIHt9Cn0KcHVibGljIHByb3RvY29sIFhDVFdhaXRlckRlbGVnYXRlIHsKICAgIHB1YmxpYyBmdW5jIG5lc3RlZFdhaXRlcihfIHdhaXRlcjogWENUV2FpdGVyLCB3YXNJbnRlcnJ1cHRlZEJ5VGltZWRPdXRXYWl0ZXIgb3V0ZXJXYWl0ZXI6IFhDVFdhaXRlcikge30KICAgIHB1YmxpYyBmdW5jIHdhaXRlcihfIHdhaXRlcjogWENUV2FpdGVyLCBkaWRGdWxmaWxsSW52ZXJ0ZWRFeHBlY3RhdGlvbiBleHBlY3RhdGlvbjogWENUZXN0RXhwZWN0YXRpb24pIHt9CiAgICBwdWJsaWMgZnVuYyB3YWl0ZXIoXyB3YWl0ZXI6IFhDVFdhaXRlciwgZGlkVGltZW91dFdpdGhVbmZ1bGZpbGxlZEV4cGVjdGF0aW9ucyB1bmZ1bGZpbGxlZEV4cGVjdGF0aW9uczogW1hDVGVzdEV4cGVjdGF0aW9uXSkge30KICAgIHB1YmxpYyBmdW5jIHdhaXRlcihfIHdhaXRlcjogWENUV2FpdGVyLCBmdWxmaWxsbWVudERpZFZpb2xhdGVPcmRlcmluZ0NvbnN0cmFpbnRzRm9yIGV4cGVjdGF0aW9uOiBYQ1Rlc3RFeHBlY3RhdGlvbiwgcmVxdWlyZWRFeHBlY3RhdGlvbjogWENUZXN0RXhwZWN0YXRpb24pIHt9Cn0KcHVibGljIHByb3RvY29sIFhDVGVzdE9ic2VydmF0aW9uIHsKICAgIHB1YmxpYyBmdW5jIHRlc3RCdW5kbGVEaWRGaW5pc2goXyB0ZXN0QnVuZGxlOiBCdW5kbGUpIHt9CiAgICBwdWJsaWMgZnVuYyB0ZXN0QnVuZGxlV2lsbFN0YXJ0KF8gdGVzdEJ1bmRsZTogQnVuZGxlKSB7fQogICAgcHVibGljIGZ1bmMgdGVzdENhc2UoXyB0ZXN0Q2FzZTogWENUZXN0Q2FzZSwgZGlkRmFpbFdpdGhEZXNjcmlwdGlvbiBkZXNjcmlwdGlvbjogU3RyaW5nLCBpbkZpbGUgZmlsZVBhdGg6IFN0cmluZz8sIGF0TGluZSBsaW5lTnVtYmVyOiBJbnQpIHt9CiAgICBwdWJsaWMgZnVuYyB0ZXN0Q2FzZURpZEZpbmlzaChfIHRlc3RDYXNlOiBYQ1Rlc3RDYXNlKSB7fQogICAgcHVibGljIGZ1bmMgdGVzdENhc2VXaWxsU3RhcnQoXyB0ZXN0Q2FzZTogWENUZXN0Q2FzZSkge30KICAgIHB1YmxpYyBmdW5jIHRlc3RTdWl0ZURpZEZpbmlzaChfIHRlc3RTdWl0ZTogWENUZXN0U3VpdGUpIHt9CiAgICBwdWJsaWMgZnVuYyB0ZXN0U3VpdGVXaWxsU3RhcnQoXyB0ZXN0U3VpdGU6IFhDVGVzdFN1aXRlKSB7fQp9")!

}
