/*
 Resources.swift

 This source file is part of the SDGSwift open source project.
 https://sdggiesbrecht.github.io/SDGSwift

 Copyright ©2018–2020 Jeremy David Giesbrecht and the SDGSwift project contributors.

 Soli Deo gloria.

 Licensed under the Apache Licence, Version 2.0.
 See http://www.apache.org/licenses/LICENSE-2.0 for licence information.
 */

import Foundation

internal enum Resources {}
internal typealias Ressourcen = Resources

extension Resources {
  enum CoreLibraries {
    static let dispatch = String(
      data: Data(
        base64Encoded:
          "cHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlRmlsZVN5c3RlbU9iamVjdCA6IERpc3BhdGNoU291cmNlUHJvdG9jb2wgewojaWYgIW9zKExpbnV4KSAmJiAhb3MoQW5kcm9pZCkgJiYgIW9zKFdpbmRvd3MpCiAgICB2YXIgZGF0YTogRGlzcGF0Y2hTb3VyY2UuRmlsZVN5c3RlbUV2ZW50IHsgZ2V0IH0KI2VuZGlmCiNpZiAhb3MoTGludXgpICYmICFvcyhBbmRyb2lkKSAmJiAhb3MoV2luZG93cykKICAgIHZhciBoYW5kbGU6IEludDMyIHsgZ2V0IH0KI2VuZGlmCiNpZiAhb3MoTGludXgpICYmICFvcyhBbmRyb2lkKSAmJiAhb3MoV2luZG93cykKICAgIHZhciBtYXNrOiBEaXNwYXRjaFNvdXJjZS5GaWxlU3lzdGVtRXZlbnQgeyBnZXQgfQojZW5kaWYKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VNYWNoUmVjZWl2ZSA6IERpc3BhdGNoU291cmNlUHJvdG9jb2wgewojaWYgSEFWRV9NQUNICiAgICB2YXIgaGFuZGxlOiBtYWNoX3BvcnRfdCB7IGdldCB9CiNlbmRpZgp9CnB1YmxpYyBwcm90b2NvbCBEaXNwYXRjaFNvdXJjZU1hY2hTZW5kIDogRGlzcGF0Y2hTb3VyY2VQcm90b2NvbCB7CiNpZiBIQVZFX01BQ0gKICAgIHZhciBkYXRhOiBEaXNwYXRjaFNvdXJjZS5NYWNoU2VuZEV2ZW50IHsgZ2V0IH0KI2VuZGlmCiNpZiBIQVZFX01BQ0gKICAgIHZhciBoYW5kbGU6IG1hY2hfcG9ydF90IHsgZ2V0IH0KI2VuZGlmCiNpZiBIQVZFX01BQ0gKICAgIHZhciBtYXNrOiBEaXNwYXRjaFNvdXJjZS5NYWNoU2VuZEV2ZW50IHsgZ2V0IH0KI2VuZGlmCn0KcHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlTWVtb3J5UHJlc3N1cmUgOiBEaXNwYXRjaFNvdXJjZVByb3RvY29sIHsKI2lmIEhBVkVfTUFDSAogICAgdmFyIGRhdGE6IERpc3BhdGNoU291cmNlLk1lbW9yeVByZXNzdXJlRXZlbnQgeyBnZXQgfQojZW5kaWYKI2lmIEhBVkVfTUFDSAogICAgdmFyIG1hc2s6IERpc3BhdGNoU291cmNlLk1lbW9yeVByZXNzdXJlRXZlbnQgeyBnZXQgfQojZW5kaWYKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VQcm9jZXNzIDogRGlzcGF0Y2hTb3VyY2VQcm90b2NvbCB7CiNpZiAhb3MoTGludXgpICYmICFvcyhBbmRyb2lkKSAmJiAhb3MoV2luZG93cykKICAgIHZhciBkYXRhOiBEaXNwYXRjaFNvdXJjZS5Qcm9jZXNzRXZlbnQgeyBnZXQgfQojZW5kaWYKI2lmICFvcyhMaW51eCkgJiYgIW9zKEFuZHJvaWQpICYmICFvcyhXaW5kb3dzKQogICAgdmFyIGhhbmRsZTogcGlkX3QgeyBnZXQgfQojZW5kaWYKI2lmICFvcyhMaW51eCkgJiYgIW9zKEFuZHJvaWQpICYmICFvcyhXaW5kb3dzKQogICAgdmFyIG1hc2s6IERpc3BhdGNoU291cmNlLlByb2Nlc3NFdmVudCB7IGdldCB9CiNlbmRpZgp9CnB1YmxpYyBwcm90b2NvbCBEaXNwYXRjaFNvdXJjZVByb3RvY29sIHsKICAgIHZhciBkYXRhOiBVSW50IHsgZ2V0IH0KICAgIHZhciBoYW5kbGU6IFVJbnQgeyBnZXQgfQogICAgdmFyIGlzQ2FuY2VsbGVkOiBCb29sIHsgZ2V0IH0KICAgIHZhciBtYXNrOiBVSW50IHsgZ2V0IH0KICAgIEBhdmFpbGFibGUobWFjT1MgMTAuMTIsIGlPUyAxMC4wLCB0dk9TIDEwLjAsIHdhdGNoT1MgMy4wLCAqKSBmdW5jIGFjdGl2YXRlKCkKICAgIGZ1bmMgY2FuY2VsKCkKICAgIGZ1bmMgcmVzdW1lKCkKICAgIEBhdmFpbGFibGUobWFjT1MgMTAuMTAsIGlPUyA4LjAsICopIGZ1bmMgc2V0Q2FuY2VsSGFuZGxlcihoYW5kbGVyOiBEaXNwYXRjaFdvcmtJdGVtKQogICAgZnVuYyBzZXRDYW5jZWxIYW5kbGVyKHFvczogRGlzcGF0Y2hRb1MgPSB4LCBmbGFnczogRGlzcGF0Y2hXb3JrSXRlbUZsYWdzID0geCwgaGFuZGxlcjogRGlzcGF0Y2hTb3VyY2VIYW5kbGVyPykKICAgIEBhdmFpbGFibGUobWFjT1MgMTAuMTAsIGlPUyA4LjAsICopIGZ1bmMgc2V0RXZlbnRIYW5kbGVyKGhhbmRsZXI6IERpc3BhdGNoV29ya0l0ZW0pCiAgICBmdW5jIHNldEV2ZW50SGFuZGxlcihxb3M6IERpc3BhdGNoUW9TID0geCwgZmxhZ3M6IERpc3BhdGNoV29ya0l0ZW1GbGFncyA9IHgsIGhhbmRsZXI6IERpc3BhdGNoU291cmNlSGFuZGxlcj8pCiAgICBAYXZhaWxhYmxlKG1hY09TIDEwLjEwLCBpT1MgOC4wLCAqKSBmdW5jIHNldFJlZ2lzdHJhdGlvbkhhbmRsZXIoaGFuZGxlcjogRGlzcGF0Y2hXb3JrSXRlbSkKICAgIGZ1bmMgc2V0UmVnaXN0cmF0aW9uSGFuZGxlcihxb3M6IERpc3BhdGNoUW9TID0geCwgZmxhZ3M6IERpc3BhdGNoV29ya0l0ZW1GbGFncyA9IHgsIGhhbmRsZXI6IERpc3BhdGNoU291cmNlSGFuZGxlcj8pCiAgICBmdW5jIHN1c3BlbmQoKQp9CnB1YmxpYyBwcm90b2NvbCBEaXNwYXRjaFNvdXJjZVJlYWQgOiBEaXNwYXRjaFNvdXJjZVByb3RvY29sIHsKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VTaWduYWwgOiBEaXNwYXRjaFNvdXJjZVByb3RvY29sIHsKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VUaW1lciA6IERpc3BhdGNoU291cmNlUHJvdG9jb2wgewogICAgQGF2YWlsYWJsZShzd2lmdCwgaW50cm9kdWNlZDogNCkgZnVuYyBzY2hlZHVsZShkZWFkbGluZTogRGlzcGF0Y2hUaW1lLCByZXBlYXRpbmcgaW50ZXJ2YWw6IERpc3BhdGNoVGltZUludGVydmFsID0geCwgbGVld2F5OiBEaXNwYXRjaFRpbWVJbnRlcnZhbCA9IHgpCiAgICBAYXZhaWxhYmxlKHN3aWZ0LCBpbnRyb2R1Y2VkOiA0KSBmdW5jIHNjaGVkdWxlKGRlYWRsaW5lOiBEaXNwYXRjaFRpbWUsIHJlcGVhdGluZyBpbnRlcnZhbDogRG91YmxlLCBsZWV3YXk6IERpc3BhdGNoVGltZUludGVydmFsID0geCkKICAgIEBhdmFpbGFibGUoc3dpZnQsIGludHJvZHVjZWQ6IDQpIGZ1bmMgc2NoZWR1bGUod2FsbERlYWRsaW5lOiBEaXNwYXRjaFdhbGxUaW1lLCByZXBlYXRpbmcgaW50ZXJ2YWw6IERpc3BhdGNoVGltZUludGVydmFsID0geCwgbGVld2F5OiBEaXNwYXRjaFRpbWVJbnRlcnZhbCA9IHgpCiAgICBAYXZhaWxhYmxlKHN3aWZ0LCBpbnRyb2R1Y2VkOiA0KSBmdW5jIHNjaGVkdWxlKHdhbGxEZWFkbGluZTogRGlzcGF0Y2hXYWxsVGltZSwgcmVwZWF0aW5nIGludGVydmFsOiBEb3VibGUsIGxlZXdheTogRGlzcGF0Y2hUaW1lSW50ZXJ2YWwgPSB4KQogICAgZnVuYyBzY2hlZHVsZU9uZXNob3QoZGVhZGxpbmU6IERpc3BhdGNoVGltZSwgbGVld2F5OiBEaXNwYXRjaFRpbWVJbnRlcnZhbCkKICAgIGZ1bmMgc2NoZWR1bGVPbmVzaG90KHdhbGxEZWFkbGluZTogRGlzcGF0Y2hXYWxsVGltZSwgbGVld2F5OiBEaXNwYXRjaFRpbWVJbnRlcnZhbCkKICAgIGZ1bmMgc2NoZWR1bGVSZXBlYXRpbmcoZGVhZGxpbmU6IERpc3BhdGNoVGltZSwgaW50ZXJ2YWw6IERpc3BhdGNoVGltZUludGVydmFsLCBsZWV3YXk6IERpc3BhdGNoVGltZUludGVydmFsKQogICAgZnVuYyBzY2hlZHVsZVJlcGVhdGluZyh3YWxsRGVhZGxpbmU6IERpc3BhdGNoV2FsbFRpbWUsIGludGVydmFsOiBEaXNwYXRjaFRpbWVJbnRlcnZhbCwgbGVld2F5OiBEaXNwYXRjaFRpbWVJbnRlcnZhbCkKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VVc2VyRGF0YUFkZCA6IERpc3BhdGNoU291cmNlUHJvdG9jb2wgewogICAgZnVuYyBhZGQoZGF0YTogVUludCkKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VVc2VyRGF0YU9yIDogRGlzcGF0Y2hTb3VyY2VQcm90b2NvbCB7CiAgICBmdW5jIG9yKGRhdGE6IFVJbnQpCn0KcHVibGljIHByb3RvY29sIERpc3BhdGNoU291cmNlVXNlckRhdGFSZXBsYWNlIDogRGlzcGF0Y2hTb3VyY2VQcm90b2NvbCB7CiAgICBmdW5jIHJlcGxhY2UoZGF0YTogVUludCkKfQpwdWJsaWMgcHJvdG9jb2wgRGlzcGF0Y2hTb3VyY2VXcml0ZSA6IERpc3BhdGNoU291cmNlUHJvdG9jb2wgewp9"
      )!,
      encoding: String.Encoding.utf8
    )!
    static let foundation = String(
      data: Data(
        base64Encoded:
          ""
      )!,
      encoding: String.Encoding.utf8
    )!
    static let swift = String(
      data: Data(
        base64Encoded:
          ""
      )!,
      encoding: String.Encoding.utf8
    )!
    static let xctest = String(
      data: Data(
        base64Encoded:
          "b3BlbiBjbGFzcyBYQ1ROU05vdGlmaWNhdGlvbkV4cGVjdGF0aW9uIDogQ3VzdG9tU3RyaW5nQ29udmVydGlibGUsIEVxdWF0YWJsZSwgSGFzaGFibGUsIFhDVGVzdEV4cGVjdGF0aW9uIHsKICAgIHB1YmxpYyBpbml0KG5hbWUgbm90aWZpY2F0aW9uTmFtZTogTm90aWZpY2F0aW9uLk5hbWUsIG9iamVjdDogQW55PyA9IHgsIG5vdGlmaWNhdGlvbkNlbnRlcjogTm90aWZpY2F0aW9uQ2VudGVyID0geCwgZmlsZTogU3RhdGljU3RyaW5nID0geCwgbGluZTogSW50ID0geCkge30KICAgIG9wZW4gdmFyIGhhbmRsZXI6IEhhbmRsZXI/IHsgZ2V0IHNldCB9CiAgICBvcGVuIHZhciBub3RpZmljYXRpb25DZW50ZXI6IE5vdGlmaWNhdGlvbkNlbnRlciB7IGdldCB9CiAgICBvcGVuIHZhciBub3RpZmljYXRpb25OYW1lOiBOb3RpZmljYXRpb24uTmFtZSB7IGdldCB9CiAgICBvcGVuIHZhciBvYnNlcnZlZE9iamVjdDogQW55PyB7IGdldCB9Cn0Kb3BlbiBjbGFzcyBYQ1ROU1ByZWRpY2F0ZUV4cGVjdGF0aW9uIDogQ3VzdG9tU3RyaW5nQ29udmVydGlibGUsIEVxdWF0YWJsZSwgSGFzaGFibGUsIFhDVGVzdEV4cGVjdGF0aW9uIHsKICAgIHB1YmxpYyBpbml0KHByZWRpY2F0ZTogTlNQcmVkaWNhdGUsIG9iamVjdDogQW55PyA9IHgsIGZpbGU6IFN0YXRpY1N0cmluZyA9IHgsIGxpbmU6IEludCA9IHgpIHt9CiAgICBvcGVuIHZhciBoYW5kbGVyOiBIYW5kbGVyPyB7IGdldCBzZXQgfQogICAgb3BlbiB2YXIgb2JqZWN0OiBBbnk/IHsgZ2V0IH0KICAgIG9wZW4gdmFyIHByZWRpY2F0ZTogTlNQcmVkaWNhdGUgeyBnZXQgfQp9Cm9wZW4gY2xhc3MgWENUV2FpdGVyIDogQ3VzdG9tU3RyaW5nQ29udmVydGlibGUsIEVxdWF0YWJsZSwgTWFuYWdlYWJsZVdhaXRlciB7CiAgICBvcGVuIGNsYXNzIGZ1bmMgd2FpdChmb3IgZXhwZWN0YXRpb25zOiBbWENUZXN0RXhwZWN0YXRpb25dLCB0aW1lb3V0OiBUaW1lSW50ZXJ2YWwsIGVuZm9yY2VPcmRlcjogQm9vbCA9IHgsIGZpbGU6IFN0YXRpY1N0cmluZyA9IHgsIGxpbmU6IEludCA9IHgpIC0+IFJlc3VsdCB7fQogICAgcHVibGljIGluaXQoZGVsZWdhdGU6IFhDVFdhaXRlckRlbGVnYXRlPyA9IHgpIHt9CiAgICBvcGVuIHZhciBkZWxlZ2F0ZTogWENUV2FpdGVyRGVsZWdhdGU/IHsgZ2V0IHNldCB9CiAgICBwdWJsaWMgdmFyIGRlc2NyaXB0aW9uOiBTdHJpbmcgeyBnZXQgfQogICAgb3BlbiB2YXIgZnVsZmlsbGVkRXhwZWN0YXRpb25zOiBbWENUZXN0RXhwZWN0YXRpb25dIHsgZ2V0IH0KICAgIHB1YmxpYyBmdW5jID09KGxoczogWENUV2FpdGVyLCByaHM6IFhDVFdhaXRlcikgLT4gQm9vbCB7fQogICAgQGRpc2NhcmRhYmxlUmVzdWx0IG9wZW4gZnVuYyB3YWl0KGZvciBleHBlY3RhdGlvbnM6IFtYQ1Rlc3RFeHBlY3RhdGlvbl0sIHRpbWVvdXQ6IFRpbWVJbnRlcnZhbCwgZW5mb3JjZU9yZGVyOiBCb29sID0geCwgZmlsZTogU3RhdGljU3RyaW5nID0geCwgbGluZTogSW50ID0geCkgLT4gUmVzdWx0IHt9Cn0Kb3BlbiBjbGFzcyBYQ1Rlc3QgewogICAgcHVibGljIGluaXQoKSB7fQogICAgb3BlbiB2YXIgbmFtZTogU3RyaW5nIHsgZ2V0IH0KICAgIG9wZW4gdmFyIHRlc3RDYXNlQ291bnQ6IEludCB7IGdldCB9CiAgICBvcGVuIHZhciB0ZXN0UnVuOiBYQ1Rlc3RSdW4/IHsgZ2V0IH0KICAgIG9wZW4gdmFyIHRlc3RSdW5DbGFzczogQW55Q2xhc3M/IHsgZ2V0IH0KICAgIG9wZW4gZnVuYyBwZXJmb3JtKF8gcnVuOiBYQ1Rlc3RSdW4pIHt9CiAgICBvcGVuIGZ1bmMgcnVuKCkge30KICAgIG9wZW4gZnVuYyBzZXRVcCgpIHt9CiAgICBvcGVuIGZ1bmMgc2V0VXBXaXRoRXJyb3IoKSB0aHJvd3Mge30KICAgIG9wZW4gZnVuYyB0ZWFyRG93bigpIHt9CiAgICBvcGVuIGZ1bmMgdGVhckRvd25XaXRoRXJyb3IoKSB0aHJvd3Mge30KfQpvcGVuIGNsYXNzIFhDVGVzdENhc2UgOiBBbnlPYmplY3QsIFBlcmZvcm1hbmNlTWV0ZXJEZWxlZ2F0ZSwgWENUV2FpdGVyRGVsZWdhdGUsIFhDVGVzdCB7CiAgICBvcGVuIGNsYXNzIGZ1bmMgc2V0VXAoKSB7fQogICAgb3BlbiBjbGFzcyBmdW5jIHRlYXJEb3duKCkge30KICAgIHB1YmxpYyByZXF1aXJlZCBpbml0KG5hbWU6IFN0cmluZywgdGVzdENsb3N1cmU6IEBlc2NhcGluZyBYQ1Rlc3RDYXNlQ2xvc3VyZSkge30KICAgIG9wZW4gdmFyIGNvbnRpbnVlQWZ0ZXJGYWlsdXJlOiBCb29sIHsgZ2V0IHNldCB9CiAgICBvcGVuIGZ1bmMgYWRkVGVhcmRvd25CbG9jayhfIGJsb2NrOiBAZXNjYXBpbmcgKCkgLT4gVm9pZCkge30KICAgIG9wZW4gZnVuYyBpbnZva2VUZXN0KCkge30KICAgIG9wZW4gZnVuYyByZWNvcmRGYWlsdXJlKHdpdGhEZXNjcmlwdGlvbiBkZXNjcmlwdGlvbjogU3RyaW5nLCBpbkZpbGUgZmlsZVBhdGg6IFN0cmluZywgYXRMaW5lIGxpbmVOdW1iZXI6IEludCwgZXhwZWN0ZWQ6IEJvb2wpIHt9Cn0Kb3BlbiBjbGFzcyBYQ1Rlc3RDYXNlUnVuIDogWENUZXN0UnVuIHsKfQpvcGVuIGNsYXNzIFhDVGVzdEV4cGVjdGF0aW9uIDogQ3VzdG9tU3RyaW5nQ29udmVydGlibGUsIEVxdWF0YWJsZSwgSGFzaGFibGUgewogICAgcHVibGljIGluaXQoZGVzY3JpcHRpb246IFN0cmluZyA9IHgsIGZpbGU6IFN0YXRpY1N0cmluZyA9IHgsIGxpbmU6IEludCA9IHgpIHt9CiAgICBvcGVuIHZhciBhc3NlcnRGb3JPdmVyRnVsZmlsbDogQm9vbCB7IGdldCBzZXQgfQogICAgcHVibGljIHZhciBkZXNjcmlwdGlvbjogU3RyaW5nIHsgZ2V0IH0KICAgIG9wZW4gdmFyIGV4cGVjdGF0aW9uRGVzY3JpcHRpb246IFN0cmluZyB7IGdldCBzZXQgfQogICAgb3BlbiB2YXIgZXhwZWN0ZWRGdWxmaWxsbWVudENvdW50OiBJbnQgeyBnZXQgc2V0IH0KICAgIG9wZW4gdmFyIGlzSW52ZXJ0ZWQ6IEJvb2wgeyBnZXQgc2V0IH0KICAgIHB1YmxpYyBmdW5jID09KGxoczogWENUZXN0RXhwZWN0YXRpb24sIHJoczogWENUZXN0RXhwZWN0YXRpb24pIC0+IEJvb2wge30KICAgIG9wZW4gZnVuYyBmdWxmaWxsKF8gZmlsZTogU3RhdGljU3RyaW5nID0geCwgbGluZTogSW50ID0geCkge30KICAgIHB1YmxpYyBmdW5jIGhhc2goaW50byBoYXNoZXI6IGlub3V0IEhhc2hlcikge30KfQpvcGVuIGNsYXNzIFhDVGVzdFJ1biB7CiAgICBwdWJsaWMgcmVxdWlyZWQgaW5pdCh0ZXN0OiBYQ1Rlc3QpIHt9CiAgICBvcGVuIHZhciBleGVjdXRpb25Db3VudDogSW50IHsgZ2V0IH0KICAgIG9wZW4gdmFyIGZhaWx1cmVDb3VudDogSW50IHsgZ2V0IH0KICAgIG9wZW4gdmFyIGhhc0JlZW5Ta2lwcGVkIHsgZ2V0IH0KICAgIG9wZW4gdmFyIGhhc1N1Y2NlZWRlZDogQm9vbCB7IGdldCB9CiAgICBvcGVuIHZhciBza2lwQ291bnQ6IEludCB7IGdldCB9CiAgICBvcGVuIHZhciBzdGFydERhdGU6IERhdGU/IHsgZ2V0IH0KICAgIG9wZW4gdmFyIHN0b3BEYXRlOiBEYXRlPyB7IGdldCB9CiAgICBwdWJsaWMgdmFyIHRlc3Q6IFhDVGVzdCB7IGdldCB9CiAgICBvcGVuIHZhciB0ZXN0Q2FzZUNvdW50OiBJbnQgeyBnZXQgfQogICAgb3BlbiB2YXIgdGVzdER1cmF0aW9uOiBUaW1lSW50ZXJ2YWwgeyBnZXQgfQogICAgb3BlbiB2YXIgdG90YWxEdXJhdGlvbjogVGltZUludGVydmFsIHsgZ2V0IH0KICAgIG9wZW4gdmFyIHRvdGFsRmFpbHVyZUNvdW50OiBJbnQgeyBnZXQgfQogICAgb3BlbiB2YXIgdW5leHBlY3RlZEV4Y2VwdGlvbkNvdW50OiBJbnQgeyBnZXQgfQogICAgb3BlbiBmdW5jIHN0YXJ0KCkge30KICAgIG9wZW4gZnVuYyBzdG9wKCkge30KfQpvcGVuIGNsYXNzIFhDVGVzdFN1aXRlIDogWENUZXN0IHsKICAgIHB1YmxpYyBpbml0KG5hbWU6IFN0cmluZykge30KICAgIG9wZW4gdmFyIHRlc3RzIHsgZ2V0IH0KICAgIG9wZW4gZnVuYyBhZGRUZXN0KF8gdGVzdDogWENUZXN0KSB7fQp9Cm9wZW4gY2xhc3MgWENUZXN0U3VpdGVSdW4gOiBYQ1Rlc3RSdW4gewogICAgb3BlbiB2YXIgdGVzdFJ1bnMgeyBnZXQgfQogICAgb3BlbiBmdW5jIGFkZFRlc3RSdW4oXyB0ZXN0UnVuOiBYQ1Rlc3RSdW4pIHt9Cn0KcHVibGljIHByb3RvY29sIFhDVFdhaXRlckRlbGVnYXRlIDogQW55T2JqZWN0IHsKICAgIGZ1bmMgbmVzdGVkV2FpdGVyKF8gd2FpdGVyOiBYQ1RXYWl0ZXIsIHdhc0ludGVycnVwdGVkQnlUaW1lZE91dFdhaXRlciBvdXRlcldhaXRlcjogWENUV2FpdGVyKQogICAgZnVuYyB3YWl0ZXIoXyB3YWl0ZXI6IFhDVFdhaXRlciwgZGlkRnVsZmlsbEludmVydGVkRXhwZWN0YXRpb24gZXhwZWN0YXRpb246IFhDVGVzdEV4cGVjdGF0aW9uKQogICAgZnVuYyB3YWl0ZXIoXyB3YWl0ZXI6IFhDVFdhaXRlciwgZGlkVGltZW91dFdpdGhVbmZ1bGZpbGxlZEV4cGVjdGF0aW9ucyB1bmZ1bGZpbGxlZEV4cGVjdGF0aW9uczogW1hDVGVzdEV4cGVjdGF0aW9uXSkKICAgIGZ1bmMgd2FpdGVyKF8gd2FpdGVyOiBYQ1RXYWl0ZXIsIGZ1bGZpbGxtZW50RGlkVmlvbGF0ZU9yZGVyaW5nQ29uc3RyYWludHNGb3IgZXhwZWN0YXRpb246IFhDVGVzdEV4cGVjdGF0aW9uLCByZXF1aXJlZEV4cGVjdGF0aW9uOiBYQ1Rlc3RFeHBlY3RhdGlvbikKfQpwdWJsaWMgcHJvdG9jb2wgWENUZXN0T2JzZXJ2YXRpb24gOiBBbnlPYmplY3QgewogICAgZnVuYyB0ZXN0QnVuZGxlRGlkRmluaXNoKF8gdGVzdEJ1bmRsZTogQnVuZGxlKQogICAgZnVuYyB0ZXN0QnVuZGxlV2lsbFN0YXJ0KF8gdGVzdEJ1bmRsZTogQnVuZGxlKQogICAgZnVuYyB0ZXN0Q2FzZShfIHRlc3RDYXNlOiBYQ1Rlc3RDYXNlLCBkaWRGYWlsV2l0aERlc2NyaXB0aW9uIGRlc2NyaXB0aW9uOiBTdHJpbmcsIGluRmlsZSBmaWxlUGF0aDogU3RyaW5nPywgYXRMaW5lIGxpbmVOdW1iZXI6IEludCkKICAgIGZ1bmMgdGVzdENhc2VEaWRGaW5pc2goXyB0ZXN0Q2FzZTogWENUZXN0Q2FzZSkKICAgIGZ1bmMgdGVzdENhc2VXaWxsU3RhcnQoXyB0ZXN0Q2FzZTogWENUZXN0Q2FzZSkKICAgIGZ1bmMgdGVzdFN1aXRlRGlkRmluaXNoKF8gdGVzdFN1aXRlOiBYQ1Rlc3RTdWl0ZSkKICAgIGZ1bmMgdGVzdFN1aXRlV2lsbFN0YXJ0KF8gdGVzdFN1aXRlOiBYQ1Rlc3RTdWl0ZSkKfQ=="
      )!,
      encoding: String.Encoding.utf8
    )!
  }
  static let syntaxHighlighting = String(
    data: Data(
      base64Encoded:
        "LyoKIFN5bnRheCBIaWdobGlnaHRpbmcuY3NzCgogVGhpcyBzb3VyY2UgZmlsZSBpcyBwYXJ0IG9mIHRoZSBTREdTd2lmdCBvcGVuIHNvdXJjZSBwcm9qZWN0LgogaHR0cHM6Ly9zZGdnaWVzYnJlY2h0LmdpdGh1Yi5pby9TREdTd2lmdAoKIENvcHlyaWdodCDCqTIwMTjigJMyMDIwIEplcmVteSBEYXZpZCBHaWVzYnJlY2h0IGFuZCB0aGUgU0RHU3dpZnQgcHJvamVjdCBjb250cmlidXRvcnMuCgogU29saSBEZW8gZ2xvcmlhLgoKIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5jZSwgVmVyc2lvbiAyLjAuCiBTZWUgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wIGZvciBsaWNlbmNlIGluZm9ybWF0aW9uLgogKi8KCi8qIExheW91dCAqLwoKLnN3aWZ0IHsKICAgIGRpc3BsYXk6IGlubGluZTsKICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKfQouc3dpZnQuYmxvY2txdW90ZSB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIG1hcmdpbjogMS40ZW0gMDsKICAgIGJvcmRlcjogMXB4IHNvbGlkOwogICAgIGJvcmRlci1yYWRpdXM6IDAuMzUyOTRlbTsKICAgIHBhZGRpbmc6IDAuMzUyOTRlbSAwLjk0MTE4ZW07Cn0KCi8qIENvbG91ciAqLwoKLnN3aWZ0LmJsb2NrcXVvdGUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0Y5RkFGQTsKICAgIGJvcmRlci1jb2xvcjogICNFNkU2RTY7Cn0KLnN3aWZ0IHsKICAgIGNvbG9yOiAjMDAwMDAwOwp9Cgouc3dpZnQgLmtleXdvcmQgewogICAgY29sb3I6ICNBQTBEOTE7Cn0KCi5zd2lmdCAucHVuY3R1YXRpb24gewogICAgY29sb3I6ICMwMDAwMDA7Cn0KCi5zd2lmdCAuZXh0ZXJuYWwuaWRlbnRpZmllciB7CiAgICBjb2xvcjogIzVDMjY5OTsKfQouc3dpZnQgLmludGVybmFsLmlkZW50aWZpZXIgewogICAgY29sb3I6ICMzRjZFNzQ7Cn0KCi5zd2lmdCAubnVtYmVyIHsKICAgIGNvbG9yOiAjMUMwMENGOwp9Cgouc3dpZnQgLnN0cmluZyB7CiAgICBjb2xvcjogI0M0MUExNjsKfQouc3dpZnQgLnN0cmluZ+KAkHB1bmN0dWF0aW9uIHsKICAgIGNvbG9yOiAjNjIyNzBCOwp9Cgouc3dpZnQgLmNvbXBpbGF0aW9u4oCQY29uZGl0aW9uIHsKICAgIGNvbG9yOiAjNjQzODIwOwp9Cgouc3dpZnQgLmNvbW1lbnQgewogICAgY29sb3I6ICMwMDc0MDA7Cn0KLnN3aWZ0IC5jb21tZW504oCQcHVuY3R1YXRpb24gewogICAgY29sb3I6ICMwMDNBMDA7Cn0KLnN3aWZ0IC5zb3VyY2XigJBoZWFkaW5nIHsKICAgIGNvbG9yOiAjNEE1NTYwOwp9Ci5zd2lmdCAudXJsIHsKICAgIGNvbG9yOiAjMEUwRUZGOwp9Cgouc3dpZnQgLmNvZGUgewogICAgY29sb3I6ICMwMDAwMDA7Cn0KCi8qIEZvbnQgKi8KCi5zd2lmdCB7CiAgICBmb250LWZhbWlseTogIlNGIE1vbm8iLCBNZW5sbywgbW9ub3NwYWNlLCAiU0YgUHJvIEljb25zIjsKICAgIGxldHRlci1zcGFjaW5nOiAtMC4wMjdlbTsKICAgIGxpbmUtaGVpZ2h0OiAxLjI2NjY3Owp9Cgouc3dpZnQgLnRleHQsIC5zd2lmdCAuc291cmNl4oCQaGVhZGluZyB7CiAgICBmb250LWZhbWlseTogIlNGIFBybyBUZXh0IiwgIlNGIFBybyBJY29ucyIsICItYXBwbGUtc3lzdGVtIiwgIkJsaW5rTWFjU3lzdGVtRm9udCIsICJIZWx2ZXRpY2EgTmV1ZSIsICJIZWx2ZXRpY2EiLCAiQXJpYWwiLCBzYW5zLXNlcmlmOwogICAgbGV0dGVyLXNwYWNpbmc6IDA7Cn0KCi5zd2lmdCAuY29tbWVudOKAkGtleXdvcmQgewogICAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KLnN3aWZ0IC5zb3VyY2XigJBoZWFkaW5nIHsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cgouc3dpZnQgLnVybDpsaW5rLCAuc3dpZnQgLnVybDp2aXNpdGVkIHsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQouc3dpZnQgLnVybDpob3ZlciB7CiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKfQo="
    )!,
    encoding: String.Encoding.utf8
  )!

}
