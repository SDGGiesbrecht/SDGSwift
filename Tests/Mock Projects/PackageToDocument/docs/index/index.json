{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/anothersublass\/methodoverride()","title":"func methodOverride()","type":"method"}],"path":"\/documentation\/primarymodule\/anothersublass","title":"AnotherSublass","type":"class"},{"path":"\/documentation\/primarymodule\/class","title":"Class","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/subclass\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/subclass\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/primarymodule\/subclass","title":"Subclass","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/superclass\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/superclass\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/primarymodule\/superclass","title":"Superclass","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/protocol\/visibleassociatedtype","title":"VisibleAssociatedType","type":"associatedtype"}],"path":"\/documentation\/primarymodule\/protocol","title":"Protocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/primarymodule\/collectiontype\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/subscript(_:)-8xw4x","title":"subscript(Int) -> Int","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/index","title":"CollectionType.Index","type":"typealias"},{"path":"\/documentation\/primarymodule\/collectiontype\/indices-swift.typealias","title":"CollectionType.Indices","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/primarymodule\/collectiontype\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/primarymodule\/collectiontype\/indices-swift.property","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/primarymodule\/collectiontype\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/primarymodule\/collectiontype\/underestimatedcount-4kx65","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/map(_:)-7oxbb","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/subscript(_:)-42axp","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/primarymodule\/collectiontype\/subscript(_:)-4zhji","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/primarymodule\/collectiontype\/subscript(_:)-735tp","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/primarymodule\/collectiontype\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/primarymodule\/collectiontype\/underestimatedcount-406bz","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/collectiontype\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/flatmap(_:)-2inyz","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/flatmap(_:)-jwq2","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/map(_:)-4abgs","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/primarymodule\/collectiontype\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/primarymodule\/collectiontype\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/primarymodule\/collectiontype","title":"CollectionType","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inherited\/==(_:_:)","title":"static func == (Inherited, Inherited) -> Bool","type":"op"},{"path":"\/documentation\/primarymodule\/inherited\/_(_:_:)-4zz0j","title":"static func < (Inherited, Inherited) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inherited\/required()","title":"func required()","type":"method"},{"path":"\/documentation\/primarymodule\/inherited\/requirement()","title":"func requirement()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inherited\/'...(_:)-1qeo3","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/primarymodule\/inherited\/'...(_:)-d563","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/primarymodule\/inherited\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/primarymodule\/inherited\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/primarymodule\/inherited\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/primarymodule\/inherited\/_(_:_:)-7hyjo","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/primarymodule\/inherited\/_=(_:_:)-5wkvy","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/primarymodule\/inherited\/_=(_:_:)-69irq","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/primarymodule\/inherited\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inherited\/provision()","title":"func provision()","type":"method"}],"path":"\/documentation\/primarymodule\/inherited\/dependencyprotocol-implementations","title":"DependencyProtocol Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inherited\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/primarymodule\/inherited\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inherited\/inherited()","title":"func inherited()","type":"method"}],"path":"\/documentation\/primarymodule\/inherited\/subdependencyprotocol-implementations","title":"SubDependencyProtocol Implementations","type":"symbol"}],"path":"\/documentation\/primarymodule\/inherited","title":"Inherited","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inheritingassociatedtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inheritingassociatedtype\/rawvalue-swift.property","title":"var rawValue: Int","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/inheritingassociatedtype\/rawvalue-swift.typealias","title":"InheritingAssociatedType.RawValue","type":"typealias"}],"path":"\/documentation\/primarymodule\/inheritingassociatedtype","title":"InheritingAssociatedType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/structure\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/structure\/property","title":"let property: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/structure\/method()","title":"func method()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/structure\/subscript(_:)","title":"subscript(Int) -> Bool","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/structure\/staticproperty","title":"static let staticProperty: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/structure\/staticmethod()","title":"static func staticMethod()","type":"method"}],"path":"\/documentation\/primarymodule\/structure","title":"Structure","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation\/init(stringinterpolation:)-3qk0a","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"},{"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation\/init(stringinterpolation:)-7wbl0","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/primarymodule\/typeexpressiblebystringinterpolation","title":"TypeExpressibleByStringInterpolation","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/globalvariable","title":"var globalVariable: Bool","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/executefunction()","title":"func executeFunction()","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/typealias","title":"TypeAlias","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/enumeration\/visible","title":"case visible","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/primarymodule\/enumeration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/primarymodule\/enumeration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/primarymodule\/enumeration","title":"Enumeration","type":"enum"}],"path":"\/documentation\/primarymodule","title":"PrimaryModule","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}