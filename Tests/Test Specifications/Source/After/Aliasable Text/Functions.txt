/*
 Functions.swift

 This source file is part of the SDGSwift open source project.
 https://sdggiesbrecht.github.io/SDGSwift/SDGSwift

 Copyright ©2018 Jeremy David Giesbrecht and the SDGSwift project contributors.

 Soli Deo gloria.

 Licensed under the Apache Licence, Version 2.0.
 See http://www.apache.org/licenses/LICENSE-2.0 for licence information.
 */

public func doSomething(_ unnamedParameter: S̲t̲r̲i̲n̲g̲) {

    var localVariable = 0
    l̲o̲c̲a̲l̲V̲a̲r̲i̲a̲b̲l̲e̲ +̲=̲ 1

    _ = 1 .̲.̲<̲ 2

    p̲e̲r̲f̲o̲r̲m̲F̲u̲n̲c̲t̲i̲o̲n̲(a̲r̲g̲u̲m̲e̲n̲t̲)
    p̲e̲r̲f̲o̲r̲m̲F̲u̲n̲c̲t̲i̲o̲n̲(w̲i̲t̲h̲: a̲r̲g̲u̲m̲e̲n̲t̲)
}

// Overload
public func doSomething(_ unnamedParameter: I̲n̲t̲) {}

public func functionWith(defaultParameterOne: B̲o̲o̲l̲ = true, defaultParameterTwo: B̲o̲o̲l̲ = false) {}

public func function(withInOutParameter: inout B̲o̲o̲l̲) {}

open class TypeScope : S̲u̲p̲e̲r̲c̲l̲a̲s̲s̲ {
    open override class static mutating func allModifiers() {}
}

public func nonstandardGenerics<T : E̲q̲u̲a̲t̲a̲b̲l̲e̲>(_ parameter: T̲) {}

public func nonstandardVoidReturn() -> V̲o̲i̲d̲ {} // swiftlint:disable:this redundant_void_return
public func withVoid(_ closure: () -> ()) {} // swiftlint:disable:this void_return

public func tupleReturn() -> (S̲t̲r̲i̲n̲g̲, I̲n̲t̲) {
    return ("", 0)
}

public func arrayReturn() -> [B̲o̲o̲l̲] {
    return []
}
public func nonstandardArrayReturn() -> A̲r̲r̲a̲y̲<B̲o̲o̲l̲> { // swiftlint:disable:this syntactic_sugar
    return []
}

public func dictionaryReturn() -> [B̲o̲o̲l̲: B̲o̲o̲l̲] {
    return []
}
public func nonstandardDictionaryReturn() -> D̲i̲c̲t̲i̲o̲n̲a̲r̲y̲<B̲o̲o̲l̲, B̲o̲o̲l̲> { // swiftlint:disable:this syntactic_sugar
    return []
}

public func withType<T>(_ type: T̲.T̲y̲p̲e̲) {}
public func withComposedProtocol(_ composed: T̲e̲x̲t̲O̲u̲t̲p̲u̲t̲S̲t̲r̲e̲a̲m̲ &̲ T̲e̲x̲t̲O̲u̲t̲p̲u̲t̲S̲t̲r̲e̲a̲m̲a̲b̲l̲e̲) {}
