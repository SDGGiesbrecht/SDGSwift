extension B̲o̲o̲l̲ {

    public static func += (precedingValue: inout B̲o̲o̲l̲, followingValue: B̲o̲o̲l̲) {}
    public static func − (_ explicitlyUnlabelledParameters: I̲n̲t̲, _ b: I̲n̲t̲) -> I̲n̲t̲ {
        return b̲
    }
}

extension I̲n̲t̲ {
    public static prefix func − (operand: I̲n̲t̲) -> I̲n̲t̲ {
        return o̲p̲e̲r̲a̲n̲d̲
    }
    public static postfix func ! (operand: I̲n̲t̲) -> I̲n̲t̲ {
        return o̲p̲e̲r̲a̲n̲d̲
    }
}

infix operator ≠: C̲o̲m̲p̲a̲r̲i̲s̲o̲n̲P̲r̲e̲c̲e̲d̲e̲n̲c̲e̲

precedencegroup LotsOfAttributes {
    associativity: r̲i̲g̲h̲t̲
    higherThan: D̲o̲n̲e̲A̲f̲t̲e̲r̲, A̲l̲s̲o̲D̲o̲n̲e̲A̲f̲t̲e̲r̲
    lowerThan: D̲o̲n̲e̲F̲i̲r̲s̲t̲, A̲l̲s̲o̲D̲o̲n̲e̲F̲i̲r̲s̲t̲
    assignment: true
}

precedencegroup NoAttributes {}

@available(*̲, unavailable) infix operator ≠≠
@available(*̲, unavailable) precedencegroup UnavailablePrecedence {}
