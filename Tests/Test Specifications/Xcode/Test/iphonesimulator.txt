  Mock: /tmp/Mock
$ xcodebuild test -destination name=iPhone  -scheme Mock -enableCodeCoverage YES -resultBundlePath
** TEST SUCCEEDED **
Analyze workspace
CodeSign [...]/MockTests.xctest
CompileSwift [...]/Mock.swift
CompileSwift [...]/MockTests.swift
CompileSwiftSources normal x_ com.apple.xcode.tools.swift.compiler
CopySwiftLibs [...]/MockTests.xctest
Ditto [...]/Mock.modulemap
Ld [...]/Mock.o normal
Ld [...]/MockTests normal
MergeSwiftModule normal x_
MkDir [...]/MockTests.xctest
PBXCp [...]/Mock-Swift.h
PBXCp [...]/x_-apple-ios-simulator.swiftdoc
PBXCp [...]/x_-apple-ios-simulator.swiftmodule
PBXCp [...]/x_-apple-ios-simulator.swiftsourceinfo
PBXCp [...]/x_.swiftdoc
PBXCp [...]/x_.swiftmodule
PBXCp [...]/x_.swiftsourceinfo
ProcessInfoPlistFile [...]/empty-MockTests.plist
Resolve Package Graph
Resolved source packages:
Test Case '-[MockTests.MockTests testExample]' passed (. seconds).
Test Case '-[MockTests.MockTests testExample]' started.
Test Suite 'All tests' passed at -- ::..
Test Suite 'All tests' started at -- ::.
Test Suite 'MockTests' passed at -- ::..
Test Suite 'MockTests' started at -- ::.
Test Suite 'MockTests.xctest' passed at -- ::..
Test Suite 'MockTests.xctest' started at -- ::.
Test session results, code coverage, and logs:
Testing started
Touch [...]/MockTests.xctest
WriteAuxiliaryFile [...]/Mock-OutputFileMap.json
WriteAuxiliaryFile [...]/Mock.LinkFileList
WriteAuxiliaryFile [...]/Mock.SwiftFileList
WriteAuxiliaryFile [...]/Mock.modulemap
WriteAuxiliaryFile [...]/MockTests-OutputFileMap.json
WriteAuxiliaryFile [...]/MockTests.LinkFileList
WriteAuxiliaryFile [...]/MockTests.SwiftFileList
WriteAuxiliaryFile [...]/empty-MockTests.plist
Writing result bundle at path:
note: Build preparation complete
note: Building targets in parallel
note: Planning